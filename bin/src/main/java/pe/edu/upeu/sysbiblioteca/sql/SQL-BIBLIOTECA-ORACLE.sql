CREATE TABLE CATEGORIAS (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY (
        START WITH 100
        INCREMENT BY 1
        NOCACHE
    ) PRIMARY KEY,
    NOMBRE VARCHAR2(50),
    ESTADO CHAR(1)
);
CREATE TABLE SECCIONES (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY (
        START WITH 100
        INCREMENT BY 1
        NOCACHE
    ) PRIMARY KEY,
    SECCION VARCHAR2(20),
    CATEGORIA_ID INTEGER NOT NULL,
    ESTADO CHAR(1),
    FOREIGN KEY (CATEGORIA_ID) REFERENCES CATEGORIAS(ID)
);
CREATE TABLE AUTORES (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY (
        START WITH 100
        INCREMENT BY 1
        NOCACHE
    ) PRIMARY KEY,
    NOMBRES VARCHAR2(50),
    APELLIDOS VARCHAR2(50),
    PAIS CHAR(18),
    ESTADO CHAR(1)
);
CREATE TABLE EDITORIALES (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY (
        START WITH 100
        INCREMENT BY 1
        NOCACHE
    ) PRIMARY KEY,
    NOMBRE VARCHAR2(50),
    ESTADO CHAR(1)
);
CREATE TABLE LIBROS (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY (
        START WITH 100
        INCREMENT BY 1
        NOCACHE
    ) PRIMARY KEY,
    TITULO VARCHAR2(50),
    PAGINAS INTEGER,
    EDICION VARCHAR2(20),
    SECCION_ID INTEGER NOT NULL,
    EDITORIAL_ID INTEGER NOT NULL,
    ESTADO CHAR(1),
    FOREIGN KEY (SECCION_ID) REFERENCES SECCIONES(ID),
    FOREIGN KEY (EDITORIAL_ID) REFERENCES EDITORIALES(ID)
);
CREATE TABLE LIBRO_AUTOR (
    LIBRO_ID INTEGER,
    AUTOR_ID INTEGER,
    PRIMARY KEY (LIBRO_ID, AUTOR_ID),
    FOREIGN KEY (LIBRO_ID) REFERENCES LIBROS(ID),
    FOREIGN KEY (AUTOR_ID) REFERENCES AUTORES(ID)
);
CREATE TABLE LECTORES (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY (
        START WITH 100
        INCREMENT BY 1
        NOCACHE
    ) PRIMARY KEY,
    NOMBRES VARCHAR2(50),
    APELLIDOS VARCHAR2(50),
    DOCUMENTO CHAR(8),
    TELEFONO CHAR(9),
    DIRECCION VARCHAR2(50),
    ESTADO CHAR(1)
);
CREATE TABLE EMPLEADOS (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY (
        START WITH 100
        INCREMENT BY 1
        NOCACHE
    ) PRIMARY KEY,
    NOMBRES VARCHAR2(50),
    APELLIDOS VARCHAR2(50),
    DOCUMENTO CHAR(8),
    TELEFONO CHAR(9),
    CORREO VARCHAR2(50),
    ESTADO CHAR(1)
);

CREATE TABLE USUARIOS (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY (
        START WITH 100
        INCREMENT BY 1
        NOCACHE
    ) PRIMARY KEY,
    USERNAME VARCHAR2(20),
    PASSWORD VARCHAR2(120),
    ESTADO CHAR(1),
    EMPLEADO_ID INTEGER UNIQUE NOT NULL,
    FOREIGN KEY (EMPLEADO_ID) REFERENCES EMPLEADOS(ID)
);
CREATE TABLE ROLES (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY (
        START WITH 100
        INCREMENT BY 1
        NOCACHE
    ) PRIMARY KEY,
    NOMBRE VARCHAR2(40),
    ESTADO CHAR(1)
);
CREATE TABLE USUARIOS_ROL (
    USUARIO_ID INTEGER,
    ROL_ID INTEGER,
    PRIMARY KEY (USUARIO_ID, ROL_ID),
    FOREIGN KEY (USUARIO_ID) REFERENCES USUARIOS(ID),
    FOREIGN KEY (ROL_ID) REFERENCES ROLES(ID)
);
CREATE TABLE ACCESOS (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY (
        START WITH 100
        INCREMENT BY 1
        NOCACHE
    ) PRIMARY KEY,
    TITULO VARCHAR2(40),
    ICONO VARCHAR2(40),
    URL VARCHAR2(50),
    ESTADO CHAR(1)
);
CREATE TABLE ACCESO_ROL (
    ACCESO_ID INTEGER,
    ROL_ID INTEGER,
    PRIMARY KEY (ACCESO_ID, ROL_ID),
    FOREIGN KEY (ACCESO_ID) REFERENCES ACCESOS(ID),
    FOREIGN KEY (ROL_ID) REFERENCES ROLES(ID)
);
CREATE TABLE PRESTAMOS (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY (
        START WITH 100
        INCREMENT BY 1
        NOCACHE
    ) PRIMARY KEY,
    FECHA_PRESTAMO DATE,
    FECHA_ENTREGA DATE,
    LECTOR_ID INTEGER NOT NULL,
    USUARIO_ID INTEGER NOT NULL,
    ESTADO CHAR(1),
    FOREIGN KEY (LECTOR_ID) REFERENCES LECTORES(ID),
    FOREIGN KEY (USUARIO_ID) REFERENCES USUARIOS(ID)
);
CREATE TABLE DETALLE_PRESTAMO (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY (
        START WITH 100
        INCREMENT BY 1
        NOCACHE
    ) PRIMARY KEY,
    OBSERVACIONES VARCHAR2(50),
    FECHA_ENTREGA DATE,
    ESTADO CHAR(1),
    LIBRO_ID INTEGER NOT NULL,
    PRESTAMO_ID INTEGER NOT NULL,
    FOREIGN KEY (LIBRO_ID) REFERENCES LIBROS(ID),
    FOREIGN KEY (PRESTAMO_ID) REFERENCES PRESTAMOS(ID)
);